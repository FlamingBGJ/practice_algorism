# -*- coding: utf-8 -*-
"""연결리스트5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jGERPpQdAj2TzQTjUw-71Fe_a3b57_44
"""

## 함수
class Node() :
    def __init__(self):
        self.data = None
        self.link = None

def printNodes(start) :
    current = start
    print(current.data, end=' ')
    while (current.link != None):
        current = current.link
        print(current.data, end=' ')
    print()

def insertNode(findData, insertData) :
    global memory, head, current, pre
    # Case1 : 머리 앞에 삽입 (다현, 화사)
    if (findData == head.data) :
        node = Node()
        node.data = insertData
        node.link = head
        head = node
        memory.append(node)
        return
    # Case2 : 중간노드 앞에 삽입(사나, 솔라)
    current = head
    while (current.link != None) :
        pre = current
        current = current.link
        if (current.data == findData):
            node = Node()
            node.data = insertData
            node.link = current
            pre.link = node
            memory.append(node)
            return
    # Case 3 : 없는노드 앞에 삽입(=뒤에 추가) (재남, 문별)
    node = Node()
    node.data = insertData
    current.link = node
    memory.append(node)
    return

def deleteNode(delData) :
    global memory, head, current, pre
    # Case1 : 머리를 삭제할 때 (다현)
    if (delData == head.data) :
        current = head
        head = head.link
        del(current)
        return
    # Case2 : 중간노드를 삭제할 때 (쯔위)
    current = head
    while (current.link != None) :
        pre = current
        current = current.link
        if (current.data == delData) :
            pre.link = current.link
            del (current)
            return
    # Case3 : 없는 노드를 삭제할 때 (재남)
    return

def findNode(findData) :
    global memory, head, current, pre
    current = head
    if (current.data == findData) :
        return current # 노드를 통째로 리턴
    while (current.link != None) :
        current = current.link
        if (current.data == findData) :
            return current
    return Node()

## 변수
memory = []
head, current, pre = None, None, None
dataAry = ['다현', '정연', '쯔위', '사나', '지효']

## 메인
# 첫 노드 만들기
node = Node()
node.data = dataAry[0]
head = node
memory.append(node)

# 두번째 이후 노드 만들기
for data in dataAry[1:] : # ['정연', '쯔위',....
    pre = node
    node = Node()
    node.data = data
    pre.link = node
    memory.append(node)

printNodes(head)

# insertNode('다현','화사')
# printNodes(head)
# insertNode('사나', '솔라')
# printNodes(head)
# insertNode('재남', '문별')
# printNodes(head)

# deleteNode('다현')
# printNodes(head)
# deleteNode('쯔위')
# printNodes(head)
# deleteNode('재남')
# printNodes(head)

retData = findNode('사나')
print(retData.data, '의 뮤비가 나옵니다. 쿵짝쿵짝~~~')